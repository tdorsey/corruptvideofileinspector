name: üåø Auto Create Branch from Issue

"on":
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create branch and comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = context.issue.number;
            const issueTitle = context.payload.issue.title;
            
            // Create a slug from the issue title
            const slug = issueTitle
              .toLowerCase()
              .replace(/[^a-z0-9\s-]/g, '')
              .replace(/\s+/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, '')
              .substring(0, 50);

            const branchName = `issue-${issueNumber}-${slug}`;
            
            try {
              // Get the default branch reference
              const { data: defaultBranch } = await github.rest.repos.get({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              
              // Get the SHA of the default branch
              const { data: ref } = await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/${defaultBranch.default_branch}`
              });
              
              // Create the new branch
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/heads/${branchName}`,
                sha: ref.object.sha
              });
              
              console.log(`‚úÖ Branch created successfully: ${branchName}`);
              
              // Post a success comment on the issue
              const commentBody = [
                `üåø **Branch Created**: \`${branchName}\``,
                '',
                'Thank you for opening this issue! A branch has been automatically created for you to work on this feature/fix.',
                '',
                '## Getting Started',
                `1. **Fetch the branch**: \`git fetch origin ${branchName}\``,
                `2. **Switch to the branch**: \`git checkout ${branchName}\``,
                '3. **Start development**: Make your changes on this branch',
                `4. **Create a Pull Request**: When ready, open a PR from \`${branchName}\` to \`main\``,
                '',
                '## Development Guidelines',
                `- Follow the [development instructions](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/.github/copilot-instructions.md)`,
                '- Run `make check` before committing to ensure code quality',
                '- Run `make test` to validate your changes',
                '- Use conventional commit messages (e.g., `feat:`, `fix:`, `docs:`)',
                '',
                'Happy coding! üöÄ'
              ].join('\n');

              await github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
              
              console.log(`‚úÖ Comment posted successfully on issue #${issueNumber}`);
              
            } catch (error) {
              console.error('‚ùå Error creating branch or posting comment:', error.message);
              
              // If branch creation fails, post a comment about the failure
              const failureComment = [
                '‚ö†Ô∏è **Branch Creation Failed**',
                '',
                'There was an issue creating an automatic branch for this issue. This might be because:',
                '- A branch with a similar name already exists',
                '- There was a temporary GitHub API issue',
                '',
                'You can manually create a branch using:',
                '```bash',
                `git checkout -b issue-${issueNumber}-${slug}`,
                '```',
                '',
                `The suggested branch name would have been: \`issue-${issueNumber}-${slug}\``
              ].join('\n');

              try {
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: failureComment
                });
              } catch (commentError) {
                console.error('‚ùå Error posting failure comment:', commentError.message);
              }
            }