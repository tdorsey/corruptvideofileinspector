name: PR Title Check

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-pr-title:
    name: Validate PR Title
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Define the allowed conventional commit types based on the
          # project's issue templates
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            chore
          # Allow scopes (optional part after type)
          requireScope: false
          # Disallow release-related types since this is handled by
          # automated releases
          disallowScopes: |
            release
          # Validate that the subject starts with lowercase
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            starts with a lowercase letter.
          # Ignore merge commits and dependabot PRs
          ignoreLabels: |
            bot
            ignore-semantic-pr
          # Validate PR body contains issue reference
          validateSingleCommit: false

      - name: Validate issue reference
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const body = context.payload.pull_request.body || '';

            // Check for issue reference in title or body
            const issueRefPattern = /#\d+/;
            const hasIssueRefInTitle = issueRefPattern.test(title);
            const hasIssueRefInBody = issueRefPattern.test(body);

            if (!hasIssueRefInTitle && !hasIssueRefInBody) {
              core.setFailed(
                'PR must reference an issue number (e.g., #123) either in ' +
                'the title or body. Example: "feat: add new feature (#123)" ' +
                'or reference in PR body.'
              );
              return;
            }

            console.log('âœ… Issue reference found');
            console.log(`Title: ${title}`);
            if (hasIssueRefInTitle) {
              console.log('Issue reference found in title');
            }
            if (hasIssueRefInBody) {
              console.log('Issue reference found in body');
            }
