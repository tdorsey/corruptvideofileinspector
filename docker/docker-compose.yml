services:
  # Production service (default profile)
  video:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: video
    volumes:
      - video_data:/app/videos:ro
      - output:/app/output
      # Mount configuration file if it exists
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - TRAKT_CLIENT_ID=5442745fccf9801ee2897718197d90fd6070f0a774a0cfa740b63f0fa8f96804
      - TRAKT_CLIENT_SECRET_FILE=/run/secrets/trakt_client_secret
      - PYTHONUNBUFFERED=1
      # Configuration can also be set via environment variables
      # These will override config file settings
      # - CVI_LOG_LEVEL=INFO
      # - CVI_MAX_WORKERS=6
      # - CVI_DEFAULT_MODE=hybrid
    # No secrets required for this service
    command: [ "python3", "src/cli/cli_handler.py", "--config", "/app/config.yaml", "--mode", "hybrid", "--verbose", "--json", "--recursive", "--max-workers", "6", "--output", "/app/output/results.json", "/app/videos" ]

  # Development service (dev profile)
  dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: video-dev
    profiles:
      - dev
    volumes:
      # Bind mount source code for development
      - .:/app
      # Persistent volumes for videos and output
      - dev_videos:/app/videos
      - dev_output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Development environment variables can override config
      # - CVI_LOG_LEVEL=DEBUG
    working_dir: /app
    command: [ "tail", "-f", "/dev/null" ] # Keep container running for development
    stdin_open: true
    tty: true

# Docker secrets configuration
secrets:
  trakt_client_secret:
    file: ./secrets/trakt_client_secret.txt

volumes:
  # Production volumes
  video_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/srv/media/movies
  output:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/ubuntu/video/output

  # Development volumes
  dev_videos:
    driver: local
  dev_output:
    driver: local
