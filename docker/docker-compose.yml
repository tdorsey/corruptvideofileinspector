services:
  scan:
    image: cvi:${APP_VERSION:-1.0.0}
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        APP_VERSION: "${APP_VERSION:-1.0.0}"
        APP_TITLE: "corrupt-video-inspector"
        APP_DESCRIPTION: "A Docker-based tool to detect and report corrupt video files using FFmpeg"
    container_name: scan
    command:
     - scan
    volumes:
      - type: bind
        source: ${PWD}/config.yaml
        target: /app/config.yaml
        read_only: true
      - video_data:/app/videos:ro
      - output:/app/output
      - logs:/app/logs
    environment:
      - TRAKT_CLIENT_ID=test_client_id
      - PYTHONUNBUFFERED=1
    secrets:
      - trakt_client_id
      - trakt_client_secret

  report:
    image: cvi:${APP_VERSION:-1.0.0}
    container_name: report
    command:
     - report
    volumes:
      - type: bind
        source: ${PWD}/config.yaml
        target: /app/config.yaml
        read_only: true
      - video_data:/app/videos:ro
      - output:/app/output
      - logs:/app/logs
    environment:
      - TRAKT_CLIENT_ID=test_client_id
      - PYTHONUNBUFFERED=1
    secrets:
      - trakt_client_id
      - trakt_client_secret

# Docker secrets configuration
secrets:
  trakt_client_id:
    file: ./secrets/trakt_client_id.txt
  trakt_client_secret:
    file: ./secrets/trakt_client_secret.txt

volumes:
  video_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_VIDEO_DIR:?'CVI_VIDEO_DIR environment variable not set'}
  output:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_OUTPUT_DIR:?'CVI_OUTPUT_DIR environment variable not set'}
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_LOG_DIR:?'CVI_LOG_DIR environment variable not set'}
  # Development volumes
  dev_videos:
    driver: local
  dev_output:
    driver: local
