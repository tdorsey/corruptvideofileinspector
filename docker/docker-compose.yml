services:
  video:
    build:
      context: ..  # Build from project root to access src/ directory
      dockerfile: docker/Dockerfile  # Specify Dockerfile location
      target: production  # Use production stage by default
    container_name: video
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      # Named volumes (fallback if bind mounts are not present)
      - video_data:/app/videos:ro
      - output:/app/output
      - logs:/app/logs
    environment:
      - TRAKT_CLIENT_ID=test_client_id
      - PYTHONUNBUFFERED=1
    secrets:
      # Docker secrets for sensitive configuration
      - trakt_client_id
      - trakt_client_secret
    # Command can be overridden at runtime, but Dockerfile provides sensible default
    command: ["python3", "src/main.py"]

# Docker secrets configuration
secrets:
  trakt_client_id:
    file: ./secrets/trakt_client_id.txt
  trakt_client_secret:
    file: ./secrets/trakt_client_secret.txt

volumes:
  # Production volumes - paths relative to project root (since context is ..)
  video_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_VIDEO_DIR:?'CVI_VIDEO_DIR environment variable not set'}
  output:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_OUTPUT_DIR:?'CVI_OUTPUT_DIR environment variable not set'}
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CVI_LOG_DIR:?'CVI_LOG_DIR environment variable not set'}
  # Development volumes
  dev_videos:
    driver: local
  dev_output:
    driver: local
