# Development Dockerfile - minimal setup that focuses on dev environment
FROM python:bookworm

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Set working directory
WORKDIR /app

# Update system and install dependencies including dumb-init for proper signal handling
RUN <<EOF
  apt-get update
  apt-get install -y \
    python3 \
    python3-pip \
    ffmpeg \
    git \
    curl \
    wget \
    vim \
    nano \
    zsh \
    build-essential \
    ca-certificates \
    dumb-init
  rm -rf /var/lib/apt/lists/*
  apt-get clean
EOF

# Create a non-root user for security
RUN <<EOF
  useradd -m -u 1000 inspector
  chown -R inspector:inspector /app
EOF

# Copy just the requirements to do a pip install
COPY requirements.txt ./

# Install basic requirements with --break-system-packages for Ubuntu 24.04+ compatibility
RUN <<EOF
  pip install --break-system-packages -r requirements.txt || \
    pip install -r requirements.txt || \
    python3 -m pip install -r requirements.txt
EOF

# Switch to non-root user
USER inspector

# Create directories for input and output
RUN mkdir -p /app/videos /app/output

# Declare mount points for config, input, output, and logs
VOLUME ["/app/config.yaml", "/app/videos", "/app/output", "/app/logs"]

# Set Python path
ENV PYTHONPATH=/app
ENV PATH="/home/inspector/.local/bin:$PATH"

# Use dumb-init as PID 1 for proper signal handling and process reaping
ENTRYPOINT ["dumb-init", "--"]

# Default command for development (show help)
CMD ["python3", "src/main.py"]
